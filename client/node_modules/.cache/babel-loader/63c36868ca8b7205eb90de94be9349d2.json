{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\martin.a.kalistenco\\\\Documents\\\\MERN\\\\root\\\\mytinerary-martin\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FETCH_ALL_CITIES } from '../actions/citiesActions';\nconst initialState = \"\";\nexport function citiesReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_CITIES:\n      return _objectSpread({}, state, {\n        pending: true\n      });\n\n    default:\n      return state;\n  }\n}\n/*export const getCities = state => state.cities;\r\nexport const getCitiesPending = state => state.pending;\r\nexport const getCitiesError = state => state.error;\r\n*/\n\nexport default citiesReducer;","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/store/reducers/citiesReducer.js"],"names":["FETCH_ALL_CITIES","initialState","citiesReducer","state","action","type","pending"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAAiC,0BAAjC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,SAASC,aAAT,CAAuBC,KAAK,GAAGF,YAA/B,EAA6CG,MAA7C,EAAqD;AACxD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,gBAAL;AACI,+BACOG,KADP;AAEIG,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOH,KAAP;AAPR;AASH;AAED;;;;;AAKA,eAAeD,aAAf","sourcesContent":["import { FETCH_ALL_CITIES } from '../actions/citiesActions'\r\n\r\nconst initialState = \"\"\r\n\r\nexport function citiesReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case FETCH_ALL_CITIES:\r\n            return {\r\n                ...state,\r\n                pending: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n/*export const getCities = state => state.cities;\r\nexport const getCitiesPending = state => state.pending;\r\nexport const getCitiesError = state => state.error;\r\n*/\r\n\r\nexport default citiesReducer;\r\n"]},"metadata":{},"sourceType":"module"}