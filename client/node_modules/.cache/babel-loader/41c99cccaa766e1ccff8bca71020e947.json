{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martin.a.kalistenco\\\\Documents\\\\MERN\\\\root\\\\mytinerary-martin\\\\client\\\\src\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nexport default class Cities extends Component {\n  constructor() {\n    super();\n\n    this.fetchCities = () => {\n      fetch('http://localhost:5000/cities/all').then(response => response.json()).then(citiesArray => this.setState({\n        citiesArray,\n        isLoading: true\n      })).catch(error => console.log(error));\n    };\n\n    this.state = {\n      isLoading: false,\n      citiesArray: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Cities\", React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"City\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), this.state.citiesArray.map(city => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" \", city.country, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/Cities.js"],"names":["React","Component","Table","Cities","constructor","fetchCities","fetch","then","response","json","citiesArray","setState","isLoading","catch","error","console","log","state","componentDidMount","render","map","city","country"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,eAAe,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC1CG,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,WARc,GAQA,MAAM;AAEhBC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,WAAW,IAAI,KAAKC,QAAL,CAAc;AAACD,QAAAA,WAAD;AAAcE,QAAAA,SAAS,EAAE;AAAzB,OAAd,CAFzB,EAGKC,KAHL,CAGWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAIH,KAda;;AAEV,SAAKG,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAE,KADF;AAETF,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAUDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,WAAL;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEK,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI,KAAKF,KAAL,CAAWP,WAAX,CAAuBU,GAAvB,CAA4BC,IAAD,IAExB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMA,IAAI,CAACC,OAAX,MAFH,CARJ,CAFL,CADJ;AAkBH;;AAxCyC","sourcesContent":["import React, { Component } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\n\r\nexport default class Cities extends Component {\r\n    constructor (){\r\n        super();\r\n        this.state = {\r\n            isLoading: false,\r\n            citiesArray: []\r\n        };\r\n    }\r\n    \r\n    fetchCities = () => {\r\n\r\n        fetch('http://localhost:5000/cities/all')\r\n            .then(response => response.json())\r\n            .then(citiesArray => this.setState({citiesArray, isLoading: true}))\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                Cities\r\n                 <Table>\r\n                     <thead>\r\n                         <tr>\r\n                             <th>Country</th>\r\n                             <th>City</th>\r\n                         </tr>\r\n                     </thead>\r\n                     <tbody></tbody>\r\n                    {this.state.citiesArray.map((city) =>\r\n                        \r\n                        <li> {city.country} </li>\r\n                        )}\r\n                </Table> \r\n            </div>  \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}