{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martin.a.kalistenco\\\\Documents\\\\MERN\\\\root\\\\mytinerary-martin\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Image from 'react-bootstrap/Image';\nimport './Cities.css';\nimport { getAllCities } from '../store/actions/citiesActions';\nimport { connect } from \"react-redux\";\n\nclass Cities extends Component {\n  constructor() {\n    super();\n\n    this.filterCities = filter => {\n      var filteredCitiesArray = [];\n      var value = filter.target.value.toLowerCase(); // this.state.citiesArray.map(element => {\n      //     if (element.city.toString().toLowerCase().startsWith(value)|| true && flase)\n      //         filteredCitiesArray.push(element)\n      // })\n\n      filteredCitiesArray = this.state.citiesArray.filter(element => element.city.toString().toLowerCase().startsWith(value));\n      this.setState({\n        filteredCitiesArray\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      citiesArray: [],\n      filteredCitiesArray: []\n    };\n  }\n\n  async UNSAFE_componentWillMount() {\n    await this.props.citiesArray();\n    this.setState({\n      citiesArray: this.props.cities.citiesReducer.citiesArray,\n      filteredCitiesArray: this.props.cities.citiesReducer.citiesArray,\n      isLoading: true\n    });\n  }\n\n  render() {\n    if (this.state.isLoading === false) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"d-flex justify-content-center mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Waiting for cities to load...\")));\n    } else return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-flex justify-content-center mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Cities\"), React.createElement(Form, {\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"city\",\n      placeholder: \"Find your favourite city!\",\n      onChange: this.filterCities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.filteredCitiesArray.map(city => React.createElement(\"tr\", {\n      key: city._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/Itinerary.js\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Image, {\n      id: \"imgtd\",\n      src: city.img,\n      fluid: true,\n      rounded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"h5\", {\n      className: \"d-flex justify-content-center mt-3\",\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, city.city)))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cities: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    citiesArray: () => dispatch(getAllCities())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/components/Cities.js"],"names":["React","Component","Table","Container","Form","Image","getAllCities","connect","Cities","constructor","filterCities","filter","filteredCitiesArray","value","target","toLowerCase","state","citiesArray","element","city","toString","startsWith","setState","isLoading","UNSAFE_componentWillMount","props","cities","citiesReducer","render","map","_id","img","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Image from 'react-bootstrap/Image'\r\nimport './Cities.css'\r\nimport { getAllCities } from '../store/actions/citiesActions'\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Cities extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: false,\r\n            citiesArray: [],\r\n            filteredCitiesArray: []\r\n        };\r\n    }\r\n\r\n    filterCities = (filter) => {\r\n        var filteredCitiesArray = [];\r\n        var value = filter.target.value.toLowerCase()\r\n\r\n        // this.state.citiesArray.map(element => {\r\n        //     if (element.city.toString().toLowerCase().startsWith(value)|| true && flase)\r\n        //         filteredCitiesArray.push(element)\r\n        // })\r\n        filteredCitiesArray = this.state.citiesArray.filter(element => element.city.toString().toLowerCase().startsWith(value))\r\n\r\n        this.setState({ filteredCitiesArray })\r\n    }\r\n\r\n    async UNSAFE_componentWillMount() {\r\n        await this.props.citiesArray();\r\n        this.setState({\r\n            citiesArray: this.props.cities.citiesReducer.citiesArray,\r\n            filteredCitiesArray: this.props.cities.citiesReducer.citiesArray,\r\n            isLoading: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading === false) {\r\n            return (\r\n                <Container>\r\n                    <h6 className=\"d-flex justify-content-center mt-3\">\r\n                        <i>Waiting for cities to load...</i></h6>\r\n                </Container>\r\n            )\r\n        }\r\n\r\n        else return (\r\n\r\n            <Container>\r\n\r\n                <h2 className=\"d-flex justify-content-center mb-2\">Cities</h2>\r\n\r\n                <Form className=\"mb-3\">\r\n                    <Form.Control type=\"city\" placeholder=\"Find your favourite city!\" onChange={this.filterCities} />\r\n                </Form>\r\n\r\n                <Table>\r\n\r\n                    <tbody>\r\n\r\n                        {this.state.filteredCitiesArray.map((city) =>\r\n                            <tr key={city._id}>\r\n                                <td>\r\n                                    <Link to=\"/Itinerary.js\">\r\n                                        <Image id=\"imgtd\"\r\n                                            src={city.img}\r\n                                            fluid rounded />\r\n                                    </Link>\r\n                                    <h5 className=\"d-flex justify-content-center mt-3\" id=\"text\">{city.city}</h5>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cities: state\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        citiesArray: () => dispatch(getAllCities())\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Cities);"]},"metadata":{},"sourceType":"module"}