{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martin.a.kalistenco\\\\Documents\\\\MERN\\\\root\\\\mytinerary-martin\\\\client\\\\src\\\\components\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport NavBar from './NavBar';\nimport Image from 'react-bootstrap/Image';\nimport './Cities.css';\nimport { fetchCitiesPending, fetchCitiesSuccess, fetchCitiesError } from '../store/actions/citiesActions';\nexport default class Cities extends Component {\n  constructor() {\n    super();\n\n    this.fetchCities = () => {\n      return dispatch => {\n        console.log(\"DISPATCH\");\n        dispatch(fetchCitiesPending());\n        fetch('http://172.16.127.35:5000/cities/all').then(res => res.json()).then(res => {\n          if (res.error) {\n            throw res.error;\n          }\n\n          dispatch(fetchCitiesSuccess(res.products));\n          return res.products;\n        }).catch(error => {\n          dispatch(fetchCitiesError(error));\n        });\n      };\n    };\n\n    this.filterCities = filter => {\n      var filteredCitiesArray = [];\n      var value = filter.target.value.toLowerCase();\n      this.state.citiesArray.map(element => {\n        if (element.city.toString().toLowerCase().startsWith(value)) filteredCitiesArray.push(element);\n      });\n      this.setState({\n        filteredCitiesArray\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      citiesArray: [],\n      filteredCitiesArray: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  render() {\n    if (this.state.isLoading === false) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(NavBar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"h6\", {\n        className: \"d-flex justify-content-center mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Waiting for cities list to load\"));\n    } else return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"d-flex justify-content-center mt-3 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Cities\"), React.createElement(Form, {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Control, {\n      type: \"city\",\n      placeholder: \"Filter your favourite city\",\n      onChange: this.filterCities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.filteredCitiesArray.map(city => React.createElement(\"tr\", {\n      key: city._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: city.img,\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      className: \"d-flex justify-content-center mt-3\",\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, city.city)))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/components/Cities.js"],"names":["React","Component","Table","Container","Form","NavBar","Image","fetchCitiesPending","fetchCitiesSuccess","fetchCitiesError","Cities","constructor","fetchCities","dispatch","console","log","fetch","then","res","json","error","products","catch","filterCities","filter","filteredCitiesArray","value","target","toLowerCase","state","citiesArray","map","element","city","toString","startsWith","push","setState","isLoading","componentDidMount","render","_id","img"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport NavBar from './NavBar'\r\nimport Image from 'react-bootstrap/Image'\r\nimport './Cities.css'\r\nimport { fetchCitiesPending, fetchCitiesSuccess, fetchCitiesError } from '../store/actions/citiesActions'\r\n\r\nexport default class Cities extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoading: false,\r\n            citiesArray: [],\r\n            filteredCitiesArray: []\r\n        };\r\n    }\r\n\r\n\r\n\r\n    fetchCities = () => {\r\n        return dispatch => {\r\n            console.log(\"DISPATCH\")\r\n            dispatch(fetchCitiesPending());\r\n            fetch('http://172.16.127.35:5000/cities/all')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if(res.error) {\r\n                    throw(res.error);\r\n                }\r\n                dispatch(fetchCitiesSuccess(res.products));\r\n                return res.products;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCitiesError(error));\r\n            })\r\n        }\r\n    }\r\n\r\n    filterCities = (filter) => {\r\n        var filteredCitiesArray = [];\r\n        var value = filter.target.value.toLowerCase()\r\n\r\n        this.state.citiesArray.map(element => {\r\n            if (element.city.toString().toLowerCase().startsWith(value))\r\n                filteredCitiesArray.push(element)\r\n        })\r\n\r\n        this.setState({ filteredCitiesArray })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCities()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading === false) {\r\n            return (\r\n                <Container>\r\n                    <NavBar>\r\n                    </NavBar>\r\n                    <h6 className=\"d-flex justify-content-center mt-3\">Waiting for cities list to load</h6>\r\n                </Container>\r\n            )\r\n        }\r\n\r\n        else return (\r\n\r\n            <Container>\r\n\r\n                <NavBar></NavBar>\r\n\r\n                <h2 className=\"d-flex justify-content-center mt-3 mb-3\">Cities</h2>\r\n\r\n                <Form className=\"mb-4\">\r\n                    <Form.Control type=\"city\" placeholder=\"Filter your favourite city\" onChange={this.filterCities} />\r\n                </Form>\r\n\r\n                <Table>\r\n\r\n                    <tbody>\r\n\r\n                        {this.state.filteredCitiesArray.map((city) =>\r\n                            <tr key={city._id}>\r\n                                <td>\r\n                                    <Image\r\n                                        src={city.img}\r\n                                        fluid />\r\n                                    <h5 className=\"d-flex justify-content-center mt-3\" id=\"text\">{city.city}</h5>\r\n                                </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}