{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martin.a.kalistenco\\\\Documents\\\\MERN\\\\root\\\\mytinerary-martin\\\\client\\\\src\\\\components\\\\Itineraries.js\";\nimport React, { Component } from 'react';\nimport './Cities.css';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\nimport { getAllItineraries } from '../store/actions/itinerariesActions';\nimport { connect } from \"react-redux\";\nimport Itinerary from './Itinerary';\n\nclass Itineraries extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: {},\n      itinerariesArray: [],\n      cityIsLoading: true,\n      itineraryIsLoading: true\n    };\n\n    this.filterItineraries = () => {\n      var thisItineraries = this.state.itinerariesArray;\n      var thisName = this.props.match.params.name;\n      console.log(\"ESTE ES EL NOMBRE ->\", thisItineraries);\n      thisItineraries = thisItineraries.filter(it => it.city == thisName);\n      this.setState({\n        itinerariesArray: thisItineraries\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.name);\n    const name = this.props.match.params.name;\n    const url = \"http://172.16.127.35:5000/cities/\" + name;\n    console.log(url);\n    fetch(url).then(response => response.json()).then(data => this.setState({\n      city: data,\n      cityIsLoading: false\n    })).then(this.filterItineraries()).catch(err => console.log(err));\n  }\n\n  async UNSAFE_componentWillMount() {\n    await this.props.itinerariesArray();\n    this.setState({\n      itinerariesArray: this.props.itineraries.itinerariesReducer.itinerariesArray,\n      itineraryIsLoading: true\n    });\n  }\n\n  render() {\n    if (this.state.cityIsLoading === true && this.state.itineraryIsLoading === true) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"d-flex justify-content-center mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Waiting still we load the cities info...\")));\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"imgcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: this.state.city.img,\n      fluid: true,\n      rounded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      className: \"d-flex justify-content-center mt-3\",\n      id: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.city.city)), this.state.itinerariesArray.map(it => React.createElement(Itinerary, {\n      itinerary: it,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    itineraries: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    itinerariesArray: () => dispatch(getAllItineraries())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Itineraries);","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/components/Itineraries.js"],"names":["React","Component","Image","Container","getAllItineraries","connect","Itinerary","Itineraries","state","city","itinerariesArray","cityIsLoading","itineraryIsLoading","filterItineraries","thisItineraries","thisName","props","match","params","name","console","log","filter","it","setState","componentDidMount","url","fetch","then","response","json","data","catch","err","UNSAFE_componentWillMount","itineraries","itinerariesReducer","render","img","map","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport './Cities.css'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { getAllItineraries } from '../store/actions/itinerariesActions'\r\nimport { connect } from \"react-redux\";\r\nimport Itinerary from './Itinerary'\r\n\r\nclass Itineraries extends Component {\r\n    state = {\r\n        city: {},\r\n        itinerariesArray: [],\r\n        cityIsLoading: true,\r\n        itineraryIsLoading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.name)\r\n        const name = this.props.match.params.name;\r\n        const url = \"http://172.16.127.35:5000/cities/\" + name;\r\n        console.log(url);\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ city: data, cityIsLoading: false }))\r\n            .then(this.filterItineraries())\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    async UNSAFE_componentWillMount() {\r\n        await this.props.itinerariesArray();\r\n        this.setState({\r\n            itinerariesArray: this.props.itineraries.itinerariesReducer.itinerariesArray,\r\n            itineraryIsLoading: true\r\n        })\r\n    }\r\n\r\n    filterItineraries = () => {\r\n\r\n        var thisItineraries = this.state.itinerariesArray;\r\n        var thisName = this.props.match.params.name;\r\n\r\n        console.log(\"ESTE ES EL NOMBRE ->\", thisItineraries)\r\n\r\n        thisItineraries = thisItineraries.filter(it => it.city == thisName);\r\n\r\n        this.setState({\r\n            itinerariesArray: thisItineraries\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.cityIsLoading === true && this.state.itineraryIsLoading === true) {\r\n            return (\r\n                <Container>\r\n                    <h6 className=\"d-flex justify-content-center mt-3\">\r\n                        <i>Waiting still we load the cities info...</i></h6>\r\n                </Container>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                <div id=\"imgcontainer\">\r\n                    <Image\r\n                        src={this.state.city.img}\r\n                        fluid rounded />\r\n                    <h5 className=\"d-flex justify-content-center mt-3\" id=\"text\">{this.state.city.city}</h5>\r\n                </div>\r\n\r\n                {this.state.itinerariesArray.map(it =>\r\n                    <Itinerary itinerary={it}>\r\n                    </Itinerary>\r\n                )}\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        itineraries: state\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        itinerariesArray: () => dispatch(getAllItineraries())\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Itineraries);"]},"metadata":{},"sourceType":"module"}