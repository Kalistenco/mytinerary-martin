{"ast":null,"code":"export const FETCH_ALL_CITIES = 'FETCH_ALL_CITIES';\n\nfunction fetchAllCities(cities) {\n  return {\n    type: FETCH_ALL_CITIES_PENDING,\n    cities: cities\n  };\n}\n\nfetchCities = () => {\n  return dispatch => {\n    console.log(\"DISPATCH\");\n    dispatch(fetchCitiesPending());\n    fetch('http://172.16.127.35:5000/cities/all').then(res => res.json()).then(res => {\n      if (res.error) {\n        throw res.error;\n      }\n\n      dispatch(fetchCitiesSuccess(res.products));\n      return res.products;\n    }).catch(error => {\n      dispatch(fetchCitiesError(error));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/store/actions/citiesActions.js"],"names":["FETCH_ALL_CITIES","fetchAllCities","cities","type","FETCH_ALL_CITIES_PENDING","fetchCities","dispatch","console","log","fetchCitiesPending","fetch","then","res","json","error","fetchCitiesSuccess","products","catch","fetchCitiesError"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,kBAAzB;;AAEP,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC5B,SAAO;AACHC,IAAAA,IAAI,EAAEC,wBADH;AAEHF,IAAAA,MAAM,EAAEA;AAFL,GAAP;AAIH;;AAEDG,WAAW,GAAG,MAAM;AAChB,SAAOC,QAAQ,IAAI;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAF,IAAAA,QAAQ,CAACG,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAAC,sCAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI;AACT,UAAIA,GAAG,CAACE,KAAR,EAAe;AACX,cAAOF,GAAG,CAACE,KAAX;AACH;;AACDR,MAAAA,QAAQ,CAACS,kBAAkB,CAACH,GAAG,CAACI,QAAL,CAAnB,CAAR;AACA,aAAOJ,GAAG,CAACI,QAAX;AACH,KARL,EASKC,KATL,CASWH,KAAK,IAAI;AACZR,MAAAA,QAAQ,CAACY,gBAAgB,CAACJ,KAAD,CAAjB,CAAR;AACH,KAXL;AAYH,GAfD;AAgBH,CAjBD","sourcesContent":["export const FETCH_ALL_CITIES = 'FETCH_ALL_CITIES';\r\n\r\nfunction fetchAllCities(cities) {\r\n    return {\r\n        type: FETCH_ALL_CITIES_PENDING,\r\n        cities: cities\r\n    }\r\n}\r\n\r\nfetchCities = () => {\r\n    return dispatch => {\r\n        console.log(\"DISPATCH\")\r\n        dispatch(fetchCitiesPending());\r\n        fetch('http://172.16.127.35:5000/cities/all')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                if (res.error) {\r\n                    throw (res.error);\r\n                }\r\n                dispatch(fetchCitiesSuccess(res.products));\r\n                return res.products;\r\n            })\r\n            .catch(error => {\r\n                dispatch(fetchCitiesError(error));\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}