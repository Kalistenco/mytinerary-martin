{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martin.a.kalistenco\\\\Documents\\\\MERN\\\\root\\\\mytinerary-martin\\\\client\\\\src\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nexport default class Cities extends Component {\n  constructor() {\n    super();\n\n    this.fetchCities = () => {\n      fetch('http://localhost:5000/cities/all').then(response => response.json()).then(citiesArray => this.setState({\n        citiesArray,\n        isLoading: true\n      })).catch(error => console.log(error));\n    };\n\n    this.state = {\n      isLoading: false,\n      citiesArray: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Cities\"), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"City\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"if(this.state.isLoading === true) \", this.state.citiesArray.map(city => React.createElement(\"tr\", {\n      key: city._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" \", city.country, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \" \", city.city, \" \"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/Cities.js"],"names":["React","Component","Table","Container","Cities","constructor","fetchCities","fetch","then","response","json","citiesArray","setState","isLoading","catch","error","console","log","state","componentDidMount","render","map","city","_id","country"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC1CI,EAAAA,WAAW,GAAG;AACV;;AADU,SAQdC,WARc,GAQA,MAAM;AAChBC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,WAAW,IAAI,KAAKC,QAAL,CAAc;AAACD,QAAAA,WAAD;AAAcE,QAAAA,SAAS,EAAE;AAAzB,OAAd,CAFzB,EAGKC,KAHL,CAGWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAHpB;AAIH,KAba;;AAEV,SAAKG,KAAL,GAAa;AACTL,MAAAA,SAAS,EAAE,KADF;AAETF,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AASDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,WAAL;AACH;;AAEDc,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEK,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEA,KAAKF,KAAL,CAAWP,WAAX,CAAuBU,GAAvB,CAA4BC,IAAD,IACxB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMD,IAAI,CAACE,OAAX,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAMF,IAAI,CAACA,IAAX,MAFJ,CADH,CAFA,CAPJ,CAFL,CADJ;AAwBH;;AA7CyC","sourcesContent":["import React, { Component } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\n\r\nexport default class Cities extends Component {\r\n    constructor (){\r\n        super();\r\n        this.state = {\r\n            isLoading: false,\r\n            citiesArray: []\r\n        };\r\n    }\r\n    \r\n    fetchCities = () => {\r\n        fetch('http://localhost:5000/cities/all')\r\n            .then(response => response.json())\r\n            .then(citiesArray => this.setState({citiesArray, isLoading: true}))\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCities()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <h2 className=\"d-flex justify-content-center\">Cities</h2>\r\n                 <Table>\r\n                     <thead>\r\n                         <tr>\r\n                             <th>Country</th>\r\n                             <th>City</th>\r\n                         </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                    if(this.state.isLoading === true) {}\r\n                    {this.state.citiesArray.map((city) => \r\n                        <tr key={city._id}>\r\n                            <td> {city.country} </td>\r\n                            <td> {city.city} </td>\r\n                        </tr>\r\n                        \r\n                    )}\r\n                    \r\n                    </tbody>\r\n                </Table> \r\n            </Container>  \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}