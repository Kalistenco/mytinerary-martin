{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\martin.a.kalistenco\\\\Documents\\\\MERN\\\\root\\\\mytinerary-martin\\\\client\\\\src\\\\Cities.js\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nexport default class Cities extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fetchCities = () => {\n      fetch('http://localhost:5000/cities/all').then(response => response.json()).then(citiesArray => this.setState({\n        citiesArray,\n        isLoading: true\n      })).catch(error => console.log(error));\n    };\n\n    this.filterCities = filter => {\n      var filteredCities = [];\n      this.state.citiesArray.map(city => {\n        if (city.city.toString().startsWith(filter.target.value)) filteredCities.push(city);\n      });\n      this.setState({\n        filteredCities\n      });\n    };\n\n    this.state = {\n      isLoading: false,\n      citiesArray: [],\n      filteredCitiesArray: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchCities();\n  }\n\n  render() {\n    if (this.state.isLoading === false) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        className: \"d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Waiting for cities list to load\"));\n    } else return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"d-flex justify-content-center mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Cities\"), React.createElement(Form, {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Filter Cities\"), React.createElement(Form.Control, {\n      type: \"city\",\n      placeholder: \"Enter city\",\n      onChange: this.filterCities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Table, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Country\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"City\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.citiesArray.map(city => React.createElement(\"tr\", {\n      key: city._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \" \", city.country, \" \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \" \", city.city, \" \"))))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/martin.a.kalistenco/Documents/MERN/root/mytinerary-martin/client/src/Cities.js"],"names":["React","Component","Table","Container","Form","Cities","constructor","props","fetchCities","fetch","then","response","json","citiesArray","setState","isLoading","catch","error","console","log","filterCities","filter","filteredCities","state","map","city","toString","startsWith","target","value","push","filteredCitiesArray","componentDidMount","render","_id","country"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport default class Cities extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false,\r\n            citiesArray: [],\r\n            filteredCitiesArray: []\r\n        };\r\n    }\r\n\r\n    fetchCities = () => {\r\n\r\n        fetch('http://localhost:5000/cities/all')\r\n            .then(response => response.json())\r\n            .then(citiesArray => this.setState({ citiesArray, isLoading: true }))\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    filterCities = (filter) => {\r\n        var filteredCities = [];\r\n             \r\n        this.state.citiesArray.map(city => {\r\n            if(city.city.toString().startsWith(filter.target.value))\r\n                filteredCities.push(city)\r\n        })\r\n\r\n        this.setState({filteredCities})\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchCities()\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.isLoading === false) {\r\n            return (\r\n                <Container>\r\n                    <h6 className=\"d-flex justify-content-center\">Waiting for cities list to load</h6>\r\n                </Container>\r\n            )\r\n        }\r\n\r\n        else return (\r\n\r\n            <Container>\r\n                <h2 className=\"d-flex justify-content-center mb-3\">Cities</h2>\r\n\r\n                <Form className=\"mb-4\">\r\n                    <Form.Label>Filter Cities</Form.Label>\r\n                    <Form.Control type=\"city\" placeholder=\"Enter city\" onChange={this.filterCities}/>\r\n                </Form>\r\n\r\n                <Table>\r\n\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Country</th>\r\n                            <th>City</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {this.state.citiesArray.map((city) =>\r\n                            <tr key={city._id}>\r\n                                <td> {city.country} </td>\r\n                                <td> {city.city} </td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n\r\n                </Table>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}